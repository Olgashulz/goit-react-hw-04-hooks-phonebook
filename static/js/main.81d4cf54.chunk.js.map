{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js","components/Contacts/Contacts.module.css","App.module.css"],"names":["module","exports","Form","state","name","number","disabled","findNameInContact","event","props","contacts","find","contact","toLowerCase","currentTarget","value","setState","alert","handleInputChange","handleSubmit","preventDefault","addNewContact","resetForm","onSubmit","this","className","styles","form","labelForm","type","onChange","onBlur","inputForm","pattern","title","required","formBtn","Component","Contacts","onDeleteContact","contactsList","map","id","contactItem","contactTel","onClick","button","proTotypes","PropTypes","array","isRequired","func","Filter","resetFiler","findLabel","protoTypes","string","App","filter","data","shortid","generate","prevState","deleteContact","contactId","getFilterName","visibleContacts","includes","localStorage","getItem","parsedContacts","JSON","parse","console","log","setItem","stringify","peapleInContact","container","phonebook","titleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81d4cf54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"findLabel\":\"Filter_findLabel__93xwj\",\"inputForm\":\"Filter_inputForm__14n6F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__d849i\",\"labelForm\":\"Form_labelForm__1JHCj\",\"inputForm\":\"Form_inputForm__c5hmZ\",\"formBtn\":\"Form_formBtn__2yWnZ\"};","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Form.module.css';\r\n\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n        disabled: false\r\n    }\r\n\r\n    findNameInContact = (event) => {\r\n        // console.log(event.currentTarget.value)\r\n\r\n        if (this.props.contacts.find((contact) =>\r\n            contact.name.toLowerCase() === event.currentTarget.value.toLowerCase()\r\n        )) {\r\n            this.setState({ disabled: true })\r\n            alert(`${event.currentTarget.value} is already in contacts.`)\r\n        }\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        // console.log(event.currentTarget.value)\r\n        // console.log(this.props.contacts)\r\n        this.setState({ [event.currentTarget.name]: event.currentTarget.value, disabled: false })\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.addNewContact(this.state);\r\n        this.resetForm();\r\n    }\r\n\r\n    resetForm = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.handleSubmit}\r\n                className={styles.form} >\r\n                <label className={styles.labelForm}>\r\n                    Name\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleInputChange}\r\n                        onBlur={this.findNameInContact}\r\n                        className={styles.inputForm}\r\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                        required\r\n                    />\r\n                </label>\r\n                <label className={styles.labelForm}>\r\n                    Number\r\n                    <input\r\n                        type=\"tel\"\r\n                        name=\"number\"\r\n                        value={this.state.number}\r\n                        onChange={this.handleInputChange}\r\n                        disabled={this.state.disabled}\r\n                        className={styles.inputForm}\r\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                        required\r\n                    />\r\n\r\n                </label>\r\n                <button\r\n                    type=\"submit\"\r\n                    disabled={this.state.disabled}\r\n                    className={styles.formBtn}\r\n                >Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nForm.propTypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    addNewContact: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contacts.module.css';\r\n\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n    <ul className={styles.contactsList}>\r\n        {contacts.map(({ name, number, id }) => (\r\n            <li key={id}\r\n                className={styles.contactItem}>\r\n                {name}:\r\n                <span className={styles.contactTel}>{number}</span>\r\n                <button onClick={() => onDeleteContact(id)} className={styles.button}>Delete</button>\r\n            </li>\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContacts.proTotypes = {\r\n    contacts: PropTypes.array.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\n\r\nconst Filter = ({ value, onChange, resetFiler }) => {\r\n    return (\r\n        <label className={styles.findLabel}>\r\n            Find contact by name\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={value}\r\n                onChange={onChange}\r\n                className={styles.inputForm}\r\n                onBlur={resetFiler}\r\n            />\r\n        </label>\r\n    )\r\n}\r\n\r\nFilter.protoTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func,\r\n    resetFiler: PropTypes.func\r\n\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport shortid from 'shortid';\r\n\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from \"./components/Filter\";\r\nimport styles from './App.module.css';\r\n\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n      console.log(contacts)\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    // console.log(prevState.contacts);\r\n    // console.log(this.state.contacts)\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  addNewContact = data => {\r\n    // console.log(this.state.contacts)\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name: data.name,\r\n      number: data.number\r\n    }\r\n\r\n    this.setState(prevState => ({\r\n      contacts: [contact, ...prevState.contacts]\r\n    }))\r\n    // console.log(this.state)\r\n  }\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }))\r\n  }\r\n\r\n  getFilterName = event => {\r\n    this.setState({\r\n      filter: event.currentTarget.value\r\n    });\r\n    // console.log(this.state.filter)\r\n  }\r\n\r\n  visibleContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  resetFiler = () => {\r\n    this.setState({ filter: '' });\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { filter, contacts } = this.state;\r\n    const peapleInContact = this.visibleContacts();\r\n\r\n    return (\r\n      <>\r\n        <div className={styles.container}>\r\n          <div className={styles.phonebook}>\r\n            <h1 className={styles.title}>Phonebook</h1>\r\n            <Form contacts={contacts} addNewContact={this.addNewContact} />\r\n            <h2 className={styles.titleContacts}>Contacts</h2>\r\n            <Filter value={filter} onChange={this.getFilterName} resetFiler={this.resetFiler} />\r\n            <Contacts contacts={peapleInContact} onDeleteContact={this.deleteContact} />\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__2kh1Y\",\"contactItem\":\"Contacts_contactItem__47GIw\",\"contactTel\":\"Contacts_contactTel__2n4Vj\",\"button\":\"Contacts_button__1jHba\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2uiTJ\",\"title\":\"App_title__2Esc_\",\"titleContacts\":\"App_titleContacts__2hCu_\",\"phonebook\":\"App_phonebook__1nK0v\"};"],"sourceRoot":""}